'use client'

import { useState } from 'react'
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"

const numerologyValues: { [key: string]: number } = {
  'A': 1, 'B': 2, 'C': 3, 'Ç': 4, 'D': 5, 'E': 6, 'Ə': 7, 'F': 8, 'G': 9,
  'Ğ': 1, 'H': 2, 'X': 3, 'I': 4, 'İ': 5, 'J': 6, 'K': 7, 'Q': 8, 'L': 9,
  'M': 1, 'N': 2, 'O': 3, 'Ö': 4, 'P': 5, 'R': 6, 'S': 7, 'Ş': 8, 'T': 9,
  'U': 1, 'Ü': 2, 'V': 3, 'Y': 4, 'Z': 5
}

const sumToSingleDigit = (num: number): number => {
  if (num === 11 || num === 22 || num === 33) return num;
  if (num < 10) return num;
  return sumToSingleDigit(num.toString().split('').reduce((sum, digit) => sum + parseInt(digit), 0));
}

const calculateDestinyValue = (text: string): number => {
  const sum = text.toUpperCase().split('').reduce((sum, char) => {
    return sum + (numerologyValues[char] || 0)
  }, 0)
  return sumToSingleDigit(sum)
}

export default function Home() {
  const [name, setName] = useState('')
  const [surname, setSurname] = useState('')
  const [nameDestiny, setNameDestiny] = useState<number | null>(null)
  const [surnameDestiny, setSurnameDestiny] = useState<number | null>(null)
  const [finalDestiny, setFinalDestiny] = useState<number | null>(null)

  const handleCalculate = () => {
    const nameValue = calculateDestinyValue(name)
    const surnameValue = calculateDestinyValue(surname)
    setNameDestiny(nameValue)
    setSurnameDestiny(surnameValue)
    setFinalDestiny(sumToSingleDigit(nameValue + surnameValue))
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 to-blue-900 flex items-center justify-center p-4">
      <Card className="w-full max-w-md bg-gray-800 text-white border border-cyan-500">
        <CardHeader className="text-center">
          <CardTitle className="text-3xl font-bold text-cyan-400">Azerbaijan Numerology Calculator</CardTitle>
          <CardDescription className="text-gray-300">Discover your destiny value</CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="space-y-2">
            <label htmlFor="name" className="text-sm font-medium text-gray-300">Ad (Name)</label>
            <Input
              id="name"
              value={name}
              onChange={(e) => setName(e.target.value)}
              className="bg-gray-700 border-cyan-500 text-white placeholder-gray-400"
              placeholder="Enter your name"
            />
          </div>
          <div className="space-y-2">
            <label htmlFor="surname" className="text-sm font-medium text-gray-300">Soyad (Surname)</label>
            <Input
              id="surname"
              value={surname}
              onChange={(e) => setSurname(e.target.value)}
              className="bg-gray-700 border-cyan-500 text-white placeholder-gray-400"
              placeholder="Enter your surname"
            />
          </div>
          <Button onClick={handleCalculate} className="w-full bg-cyan-600 hover:bg-cyan-700 text-white">
            Calculate Destiny Value
          </Button>
          {finalDestiny !== null && (
            <div className="mt-4 space-y-2 text-center">
              <p className="text-lg font-semibold text-cyan-400">Your Destiny Values:</p>
              <p className="text-white">Name: <span className="font-bold">{nameDestiny}</span></p>
              <p className="text-white">Surname: <span className="font-bold">{surnameDestiny}</span></p>
              <p className="text-2xl font-bold text-cyan-400">Final Destiny Number: {finalDestiny}</p>
              {(finalDestiny === 11 || finalDestiny === 22 || finalDestiny === 33) && (
                <p className="text-yellow-400 font-semibold">You have a Master Number!</p>
              )}
            </div>
          )}
        </CardContent>
      </Card>
      <div className="fixed bottom-4 right-4 grid grid-cols-6 gap-2 bg-gray-800 p-4 rounded-lg border border-cyan-500">
        {Object.entries(numerologyValues).map(([letter, value]) => (
          <div key={letter} className="text-center">
            <span className="text-cyan-400 font-bold">{letter}</span>
            <span className="text-white ml-1">{value}</span>
          </div>
        ))}
      </div>
    </div>
  )
}